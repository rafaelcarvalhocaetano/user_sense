package channel

//
//import (
//	dto2 "botwhatsapp/internal/app/whatsapp/usecases/dojo/dto"
//	"fmt"
//	"os"
//	"sync"
//
//	"botwhatsapp/internal/app/whatsapp"
//	"botwhatsapp/internal/app/whatsapp/usecases/dojo"
//	"botwhatsapp/internal/app/whatsapp/usecases/message/dto"
//	"botwhatsapp/internal/interfaces/webhooks/model"
//)
//
//type MessageChannel struct {
//	db   whatsapp.Repository
//	gate whatsapp.Gateway
//	dojo dojo.Gateway
//}
//
//func NewMessageChannel(db whatsapp.Repository, gate whatsapp.Gateway, dojo dojo.Gateway) *MessageChannel {
//	return &MessageChannel{db: db, gate: gate, dojo: dojo}
//}
//
//func (cm *MessageChannel) Main(dataChan <-chan *model.WebhookData) {
//	metaID := os.Getenv("META_WBA_ID")
//	go func() {
//		for c := range dataChan {
//			if len(c.Entry) == 0 && c.Entry[0].ID != metaID {
//				return
//			}
//
//			entry := c.Entry[0]
//			if len(entry.Changes) == 0 {
//				return
//			}
//			change := entry.Changes[0]
//			userPhoneNumber := cm.userPhoneNumber(change)
//			innerValue := make(map[string]any)
//			var userName string
//			innerValue[*userPhoneNumber] = map[string]any{}
//
//			var wg sync.WaitGroup
//			wg.Add(1)
//
//			go func() {
//				defer wg.Done()
//				statuses := change.Value.Statuses
//				contacts := change.Value.Contacts
//				messages := change.Value.Messages
//				//metadata := change.Value.Metadata
//				if len(contacts) > 0 {
//					profile := contacts[0].Profile
//					userName = profile.Name
//				}
//
//				if len(statuses) > 0 {
//					_statuses := statuses[0]
//					phoneNumber := _statuses.RecipientID
//					status := _statuses.Status
//					sid := _statuses.ID
//					ld := fmt.Sprintf("user_see: %v", status)
//					_ = cm.db.DojoSaveUserMessage(&userName, phoneNumber, &ld, &status, &sid, &entry.ID)
//					//cm.sendMessageDefault(entry, metaID, userPhoneNumber, userName)
//					return
//				}
//				var payload string
//
//				if len(messages) > 0 {
//					message := change.Value.Messages[0]
//
//					if message.Type == "text" {
//						payload = message.Text.Body
//						//xad := dojo.InputSendSimpleMessage{To: *userPhoneNumber, Message: currentStep.Error}
//						//_, _ = cm.dojo.SendSimpleMessage(&xad)
//					}
//					if message.Type == "button" {
//						if message.Button.Payload != nil {
//							payload := *message.Button.Payload
//							datax := cm.dojo.ChangeFlow(payload)
//							if datax != nil {
//								fmt.Println("\n\n\n data: ", datax)
//								doj := dto2.DojoDispatch{
//									To: userPhoneNumber,
//									Params: &map[string]any{
//										"param_body_1":   userName,
//										"param_header_1": "https://media.dev.to/cdn-cgi/image/width=1080,height=1080,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fwsrivp5deyklmxxxa6ok.jpeg",
//									},
//								}
//								xs := datax["next"].(string)
//								doj.Name = &xs
//								_, _ = cm.dojo.Dispatch(&doj)
//							} else {
//								fmt.Println("\n\n\n data: ", datax)
//								xad := dojo.InputSendSimpleMessage{To: *userPhoneNumber, Message: "NÃ£o identificamos a resposta"}
//								_, _ = cm.dojo.SendSimpleMessage(&xad)
//								//doj := dto2.DojoDispatch{
//								//	To: userPhoneNumber,
//								//	Params: &map[string]any{
//								//		"param_body_1":   userName,
//								//		"param_header_1": "https://media.dev.to/cdn-cgi/image/width=1080,height=1080,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fwsrivp5deyklmxxxa6ok.jpeg",
//								//	},
//								//}
//								//xs := datax["next"].(string)
//								//doj.Name = &xs
//								//_, _ = cm.dojo.Dispatch(&doj)
//							}
//						}
//					}
//					if message.Type == "interactive" {
//						if interactive := message.Interactive; interactive != nil && interactive.Type == "button_reply" {
//							//payload = interactive.ButtonReply.ID
//						}
//					}
//
//					//switch message.Type {
//					//case "text":
//					//	payload = message.Text.Body
//					//	xad := dojo.InputSendSimpleMessage{To: *userPhoneNumber, Message: currentStep.Error}
//					//	_, _ = cm.dojo.SendSimpleMessage(&xad)
//					//case "button":
//					//	if message.Button.Payload != nil {
//					//		payload = *message.Button.Payload
//					//	}
//					//case "interactive":
//					//	if interactive := message.Interactive; interactive != nil && interactive.Type == "button_reply" {
//					//		payload = interactive.ButtonReply.ID
//					//	}
//					//}
//				}
//			}()
//			wg.Wait()
//		}
//	}()
//}
//
//func (cm *MessageChannel) sendMessageDefault(entry *model.Entry, metaID string, userPhoneNumber *string, userName string) {
//	if entry.ID == metaID {
//		data := dto.MessageData{
//			To:   *userPhoneNumber,
//			Text: dto.Text{Body: fmt.Sprintf("Ola %v, um momento iremos te direcionar para uma atendente", userName)},
//		}
//		_, _ = cm.gate.SimpleMessage(&data)
//		return
//	}
//}
//
//func (cm *MessageChannel) userPhoneNumber(change *model.Change) *string {
//	var upn string
//	if statuses := change.Value.Statuses; statuses != nil && len(statuses) > 0 {
//		if recipientID := statuses[0].RecipientID; recipientID != nil {
//			upn = *recipientID
//		}
//	}
//
//	if upn == "" {
//		if contacts := change.Value.Contacts; contacts != nil && len(contacts) > 0 {
//			if waID := contacts[0].WaID; waID != nil {
//				upn = *waID
//			}
//		}
//	}
//
//	return &upn
//}
//
//func (cm *MessageChannel) messages(change *model.Change, userName string, userPhoneNumber string, entry *model.Entry) {
//	message := change.Value.Messages[0]
//	s := "send-by-user"
//	if message.Type == "text" {
//		_ = cm.db.DojoSaveUserMessage(&userName, &message.From, &message.Text.Body, &s, &message.ID, &entry.ID)
//		return
//	}
//
//	if message.Type == "button" {
//		var nextID string
//		if message.Button.Payload != nil {
//			nextID = *message.Button.Payload
//		}
//		if message.Button.ID != nil {
//			nextID = *message.Button.ID
//		}
//		clc := fmt.Sprintf("clicou em: %v", nextID)
//		_ = cm.db.DojoSaveUserMessage(&userName, &message.From, &clc, &s, &message.ID, &entry.ID)
//		return
//	}
//
//	if message.Type == "interactive" {
//		interactive := message.Interactive
//		if interactive != nil && interactive.Type == "button_reply" {
//			nextID := interactive.ButtonReply.ID
//			clc := fmt.Sprintf("clicou em: %v", nextID)
//			_ = cm.db.DojoSaveUserMessage(&userName, &userPhoneNumber, &clc, &s, &message.ID, &entry.ID)
//		}
//		return
//	}
//}
